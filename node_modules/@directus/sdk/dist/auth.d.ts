import { PasswordsHandler } from './handlers/passwords';
export declare type AuthCredentials = {
    email: string;
    password: string;
    otp?: string;
};
export declare type AuthToken = string;
export declare type AuthResult = {
    access_token: string;
    expires: number;
    refresh_token?: string | null;
};
export declare type AuthLoginOptions = {
    refresh?: AuthRefreshOptions;
};
export declare type AuthRefreshOptions = {
    auto?: boolean;
    time?: number;
};
export interface IAuth {
    readonly token: string | null;
    readonly password: PasswordsHandler;
    readonly expiring: boolean;
    login(credentials: AuthCredentials, options?: AuthLoginOptions): Promise<AuthResult>;
    refresh(force?: boolean): Promise<AuthResult | false>;
    static(token: AuthToken): Promise<boolean>;
    logout(): Promise<void>;
}
//# sourceMappingURL=auth.d.ts.map