/**
 * Collections handler
 */
import { ManyItems, OneItem, PartialItem, QueryOne } from '../items';
import { ITransport } from '../transport';
import { CollectionType, DefaultType } from '../types';
export declare type CollectionItem<T = DefaultType> = CollectionType & T;
export declare class CollectionsHandler<T = CollectionItem> {
    transport: ITransport;
    constructor(transport: ITransport);
    readOne(collection: string): Promise<OneItem<T>>;
    readAll(): Promise<ManyItems<T>>;
    createOne(collection: PartialItem<T>): Promise<OneItem<T>>;
    createMany(collections: PartialItem<T>[]): Promise<ManyItems<T>>;
    updateOne(collection: string, item: PartialItem<T>, query?: QueryOne<T>): Promise<OneItem<T>>;
    deleteOne(collection: string): Promise<void>;
}
//# sourceMappingURL=collections.d.ts.map